/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/B0kbyn8083v
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
"use client";
import { ResponsiveBar } from "@nivo/bar";

export function Stats() {
   return (
      <div className="bg-[rgb(152,30,37)] bg-[linear-gradient(56deg,_rgba(152,30,37,1)_0%,_rgba(111,18,18,1)_36%,_rgba(54,26,28,1)_98%)] p-6 rounded-lg w-full">
         <BarChart className="w-full h-[200px]" />
         <div className="bg-white p-4 rounded-b-lg">
            <div className="text-center font-semibold text-lg mb-2">
               Udhëtimet 10 Ditët e fundit
            </div>
            <div className="text-center text-sm text-gray-500 mb-4">
               (+23) më shumë se 10 ditët e fundit
            </div>
            <div className="flex justify-around">
               <div className="text-center">
                  <CarIcon className="text-red-600 mb-1" />
                  <div className="font-bold text-lg">32,984</div>
                  <div className="text-sm text-gray-500">KM</div>
               </div>
               <div className="text-center">
                  <PhoneIcon className="text-red-600 mb-1" />
                  <div className="font-bold text-lg">5,328</div>
                  <div className="text-sm text-gray-500">Thirje</div>
               </div>
               <div className="text-center">
                  <WalletIcon className="text-red-600 mb-1" />
                  <div className="font-bold text-lg">2,400$</div>
                  <div className="text-sm text-gray-500">Përfitime</div>
               </div>
            </div>
         </div>
      </div>
   );
}

function BarChart(props: any) {
   return (
      <div {...props}>
         <ResponsiveBar
            data={[
               { name: "Jan", count: 111 },
               { name: "Feb", count: 157 },
               { name: "Mar", count: 129 },
               { name: "Apr", count: 150 },
               { name: "May", count: 119 },
               { name: "Jun", count: 72 },
               { name: "July", count: 72 },
               { name: "Aug", count: 72 },
               { name: "Sept", count: 72 },
               { name: "Oct", count: 72 },
               { name: "Nov", count: 72 },
            ]}
            keys={["count"]}
            indexBy="name"
            margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
            padding={0.3}
            colors={["white"]}
            axisBottom={{
               tickSize: 0,
               tickPadding: 16,
               renderTick:(tick: any) => (
                  <g transform={`translate(${tick.x},0)`}>
                     <text
                        x={0}
                        y={18}
                        dy={-4}
                        textAnchor="middle"
                        fill="white"
                        fontSize="11px"
                     >
                        {tick.value}
                     </text>
                  </g>
               )
            }}
            axisLeft={{
               tickSize: 0,
               tickValues: 4,
               tickPadding: 10,
               renderTick: (tick: any) => (
                  <g transform={`translate(0,${tick.y})`}>
                     <text
                        x={"-8"}
                        y={7}
                        dy={-4}
                        textAnchor="end"
                        fill="white"
                        fontSize="11px"
                     >
                        {tick.value}
                     </text>
                  </g>
               )
            }}
            gridYValues={4}
            theme={{
               tooltip: {
                  chip: {
                     borderRadius: "9999px",
                  },
                  container: {
                     fontSize: "12px",
                     textTransform: "capitalize",
                     borderRadius: "6px",
                  },
               },
               grid: {
                  line: {
                     stroke: "#f3f4f6",
                  },
               },
            }}
            tooltipLabel={({ id }) => `${id}`}
            enableLabel={false}
            role="application"
            ariaLabel="A bar chart showing data"
         />
      </div>
   );
}

function CarIcon(props: any) {
   return (
      <svg
         {...props}
         xmlns="http://www.w3.org/2000/svg"
         width="24"
         height="24"
         viewBox="0 0 24 24"
         fill="none"
         stroke="currentColor"
         strokeWidth="2"
         strokeLinecap="round"
         strokeLinejoin="round"
      >
         <path d="M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2" />
         <circle cx="7" cy="17" r="2" />
         <path d="M9 17h6" />
         <circle cx="17" cy="17" r="2" />
      </svg>
   );
}

function PhoneIcon(props: any) {
   return (
      <svg
         {...props}
         xmlns="http://www.w3.org/2000/svg"
         width="24"
         height="24"
         viewBox="0 0 24 24"
         fill="none"
         stroke="currentColor"
         strokeWidth="2"
         strokeLinecap="round"
         strokeLinejoin="round"
      >
         <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
      </svg>
   );
}

function WalletIcon(props: any) {
   return (
      <svg
         {...props}
         xmlns="http://www.w3.org/2000/svg"
         width="24"
         height="24"
         viewBox="0 0 24 24"
         fill="none"
         stroke="currentColor"
         strokeWidth="2"
         strokeLinecap="round"
         strokeLinejoin="round"
      >
         <path d="M21 12V7H5a2 2 0 0 1 0-4h14v4" />
         <path d="M3 5v14a2 2 0 0 0 2 2h16v-5" />
         <path d="M18 12a2 2 0 0 0 0 4h4v-4Z" />
      </svg>
   );
}
